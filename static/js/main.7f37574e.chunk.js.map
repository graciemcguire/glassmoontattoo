{"version":3,"sources":["logo.png","Containers/MainContainer.js","Components/ArtistCard.js","Components/NavBar.js","Containers/ArtistContainer.js","Components/Contact.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainContainer","react_default","a","createElement","className","src","logo","alt","react_router_dom","to","Component","withRouter","ArtistCard","_this$props$artist","this","props","artist","first_name","last_name","image","email","bio","instagram","full_name","concat","NavBar","ArtistContainer","mapArtists","artists","map","ArtistCard_ArtistCard","key","id","console","log","react","Components_NavBar","Contact","About","App","state","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f37574e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.86f0c529.png\";","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport logo from '../logo.png'\n// import '../stylesheets/main.scss'\n\nclass MainContainer extends Component {\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <img className='logo-main' src={logo} alt='glass moon tattoo'/>\n        <div className='home-nav-links'>\n          <Link className='nav-link' to={ '/' }> HOME </Link>\n          <Link className='nav-link' to={ '/about' }> ABOUT </Link>\n          <Link className='nav-link' to={ '/artists' }> ARTISTS </Link>\n          <Link className='nav-link' to={ '/contact' }> CONTACT </Link>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(MainContainer)\n","import React, { Component, Fragment } from 'react';\n\nexport default class ArtistCard extends Component {\n  render() {\n\n    const { first_name, last_name, email, image, bio, instagram } = this.props.artist\n    const full_name = `${first_name} ${last_name}`\n\n    return (\n      <div className='artist-bio'>\n        <img className='artist-images' alt={ full_name } src={ image }/>\n        <h3>{ full_name }</h3>\n        <p>{ bio }</p>\n        <p>@{ instagram }</p>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\n// import '../stylesheets/nav.scss'\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom'\n\nclass NavBar extends Component {\n\n  render() {\n    return (\n      <div className='nav'>\n        <h1>GLASS MOON TATTOO</h1>\n        <div className='nav-links'>\n            <Link className='nav-link' to={ '/' }> HOME </Link>|\n            <Link className='nav-link' to={ '/about' }> ABOUT </Link>|\n            <Link className='nav-link' to={ '/artists' }> ARTISTS </Link>|\n            <Link className='nav-link' to={ '/contact' }> CONTACT </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(NavBar)\n","import React, { Component, Fragment } from 'react';\nimport { artists } from '../artistdb.json'\nimport ArtistCard from '../Components/ArtistCard'\nimport NavBar from '../Components/NavBar'\n\nexport default class ArtistContainer extends Component {\n\n  mapArtists = () => {\n    return artists.map(artist=> (\n      <ArtistCard key={ artist.id }  artist={ artist }/>\n    ))\n  }\n\n  render() {\n    console.log(artists);\n    return (\n      <Fragment >\n        <NavBar />\n        <div className='about-section'>\n          <img className='about-image' src='../images/artists.jpg'/>\n          <h3>ARTISTS</h3>\n          { this.mapArtists() }\n        </div>\n      </ Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport NavBar from './NavBar'\n\nexport default class Contact extends Component {\n  render(){\n    return(\n      <Fragment >\n        <NavBar />\n        <h1>CONTACT</h1>\n      </ Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport NavBar from './NavBar'\n\nexport default class About extends Component {\n  render(){\n    return(\n      <Fragment >\n        <NavBar />\n        <div className='about-section'>\n          <img className='about-image' src='../images/about.jpg'/>\n          <h3>ABOUT</h3>\n          <p className='about-text'>De possumus arbitrantur o ex si velit elit ipsum. Noster voluptate ut\n            imitarentur ita id aute mentitum. Legam proident sempiternum, iis ullamco\n            coniunctione ea excepteur se cillum voluptate, magna id appellat in o et amet\n            ingeniis, ab export pariatur sempiternum, legam nam vidisse si nescius legam\n            velit quamquam tamen.Et fore eruditionem ex excepteur cillum ex appellat\n            coniunctione. Quo esse transferrem, ea si reprehenderit, admodum do multos, iis\n            id tamen culpa quid, pariatur cillum est offendit reprehenderit ab commodo quid\n            legam excepteur multos, incurreret enim iis arbitror comprehenderit, fore\n            voluptate an comprehenderit. Sint excepteur e praetermissum, quis cohaerescant\n            singulis export laborum, elit probant cohaerescant, pariatur ita sint. Deserunt\n            eruditionem o constias ab nam noster mentitum litteris, elit probant te\n            relinqueret, iudicem ipsum probant quamquam.    </p>\n        </div>\n      </ Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport MainContainer from './Containers/MainContainer'\nimport ArtistContainer from './Containers/ArtistContainer'\nimport Contact from './Components/Contact'\nimport About from './Components/About'\nimport { Switch, Route } from 'react-router-dom'\n\nexport default class App extends Component {\n\n  render() {\n    console.log(this.state);\n    return (\n      <Fragment>\n        <Switch>\n          <Route\n            path=\"/artists\"\n            component={ ArtistContainer }\n          />\n          <Route\n            path=\"/about\"\n            component={ About }\n          />\n          <Route\n            path=\"/contact\"\n            component={ Contact }\n          />\n          <Route\n            path=\"/\"\n            component={ MainContainer }\n          />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}